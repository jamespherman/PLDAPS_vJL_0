function p               = plotWindowSetup(p)

%% Create plotting window(s)
% close open windows other than the gui:
figWins = findobj(0, 'Type', 'Figure');
figWins = figWins(~arrayfun(@(x)contains(x.Name, 'PLDAPS'), figWins));
if ~isempty(figWins)
    delete(figWins);
end

% make new plotting window for fixation / joystick press duration timing
% information:
p.draw.onlinePlotWindow         = ...
    figure(...
    'Position', [880 10 750 1200],...
    'Name','OnlineTrialDataPlotWindow',...
    'NumberTitle','off',...
    'Color', 1 * [1 1 1],...
    'Visible','off',...
    'NextPlot','add');

% make new plotting window for plotting a running estimate of correct
% performance
p.draw.onlinePerfPlotWindow         = ...
    figure(...
    'Position', [1750 560 800 1200],...
    'Name','OnlinePerfPlotWindow',...
    'NumberTitle','off',...
    'Color', 1 * [1 1 1],...
    'Visible','off',...
    'NextPlot','add');

% make new plotting window for eye position relative to fixation window:
p.draw.onlineEyePlotWindow         = ...
    figure(...
    'Position', [110 560 750 750],...
    'Name','OnlineEyePlotWindow',...
    'NumberTitle','off',...
    'Color', 1 * [1 1 1],...
    'Visible','off',...
    'NextPlot','add');

% If we're actually going to use the online plots, we need to create some
% axes to plot into in the online plot figure window, and graphics object
% handles for the plots themselves, and we should also show the plotting
% window:
if isfield(p.trVarsInit, 'wantOnlinePlots') && p.trVarsInit.wantOnlinePlots
    
    % make axes for plotting trial-by-trial timing / performance outcomes:
    p.draw.onlinePlotAxes = axes(...
        'Parent', p.draw.onlinePlotWindow, ...
        'Position', [0.1 0.1 0.875 0.875], ...
        'TickDir', 'Out', ...
        'LineWidth', 1, ...
        'XColor', [0 0 0], ...
        'YColor', [0 0 0], ...
        'NextPlot', 'add', ...
        'YDir', 'reverse' ...
        );
    
    % add X / Y axis labels:
    set(p.draw.onlinePlotAxes.XAxis.Label, ...
        'String', 'Time from stimulus change (s)', ...
        'FontSize', 16 ...
        );
    set(p.draw.onlinePlotAxes.YAxis.Label, ...
        'String', 'Trial Number / Index', ...
        'FontSize', 16 ...
        );
    
    % Make plot objects for several trial outcomes:
    % (1) Hits              - Green filled squares
    % (2) Misses            - Red empty squares
    % (3) Correct Rejects   - Blue filled triangles
    % (4) False Alarms      - Orange empty triangles
    % (5) Fixation Breaks   - Black empty stars
    % (6) Joystick Breaks   - Black empty circles
    % (7) Non-starts        - Black empty diamonds
    p.draw.onlinePlotObj(1) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(2) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(3) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(4) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(5) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(6) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    p.draw.onlinePlotObj(7) = plot(p.draw.onlinePlotAxes, NaN, NaN);
    
    % (1) Hits              - Green filled squares
    set(p.draw.onlinePlotObj(1), 'LineStyle', 'none', 'Marker', 's', ...
        'MarkerFaceColor', [0.1020 0.5216 1], 'MarkerEdgeColor', 'None');

    % (2) Misses            - Red empty squares
    set(p.draw.onlinePlotObj(2), 'LineStyle', 'none', 'Marker', 's', ...
        'MarkerEdgeColor', [0.8627 0.1961 0.1255], ...
        'MarkerFaceColor', [1 1 1], 'LineWidth', 1);

    % (3) Correct Rejects   - Blue filled triangles
    set(p.draw.onlinePlotObj(3), 'LineStyle', 'none', 'Marker', 'o', ...
        'MarkerEdgeColor', 'none', 'MarkerFaceColor', ...
        [0.1020 0.5216 1.0000]);

    % (4) False Alarms      - Orange empty triangles
    set(p.draw.onlinePlotObj(4), 'LineStyle', 'none', 'Marker', 's', ...
        'MarkerEdgeColor', [1 0.7608 0.0392], 'MarkerFaceColor', ...
        [1 1 1], 'LineWidth', 1);

    % (5) Fixation Breaks   - Black empty stars
    set(p.draw.onlinePlotObj(5), 'LineStyle', 'none', 'Marker', 'p', ...
        'MarkerEdgeColor', [0 0 0], 'MarkerFaceColor', [1 1 1], ...
        'LineWidth', 1);

    % (6) Joystick Breaks   - Black empty circles
    set(p.draw.onlinePlotObj(6), 'LineStyle', 'none', 'Marker', 'o', ...
        'MarkerEdgeColor', [0 0 0], 'MarkerFaceColor', [1 1 1], ...
        'LineWidth', 1);

    % (7) Non-starts        - Black empty diamonds
    set(p.draw.onlinePlotObj(7), 'LineStyle', 'none', 'Marker', 'd', ...
        'MarkerEdgeColor', [0 0 0],  'MarkerFaceColor', [1 1 1], ...
        'LineWidth', 1);

    % define legend entries for plot objects:
    p.draw.onlinePlotLegendStrings = {'Hit', 'Miss', 'CR', 'FA', ...
        'Fix Break', 'Joy Break', 'Non Start'};

    % make axes for plotting eye position:
    p.draw.onlineEyePlotAxes = axes(...
        'Parent', p.draw.onlineEyePlotWindow, ...
        'Position', [0.1 0.1 0.875 0.875], ...
        'TickDir', 'Out', ...
        'LineWidth', 1, ...
        'XColor', [0 0 0], ...
        'YColor', [0 0 0], ...
        'NextPlot', 'add' ...
        );
    
    % add X / Y axis labels:
    set(p.draw.onlineEyePlotAxes.XAxis.Label, ...
        'String', 'Horizontal Position (deg)', ...
        'FontSize', 16 ...
        );
    set(p.draw.onlineEyePlotAxes.YAxis.Label, ...
        'String', 'Vertical Position (deg)', ...
        'FontSize', 16 ...
        );

    % make plot objects: (1) fixation window indicator (black); (2) eye
    % position before fixation acquisition (red); (3) eye position after
    % fixation acquisition (blue).
    p.draw.onlineEyePlotObj(1) = plot(p.draw.onlineEyePlotAxes, NaN, NaN);
    p.draw.onlineEyePlotObj(2) = plot(p.draw.onlineEyePlotAxes, NaN, NaN);
    p.draw.onlineEyePlotObj(3) = plot(p.draw.onlineEyePlotAxes, NaN, NaN);
    
    % set plot object properties:
    set(p.draw.onlineEyePlotObj(1), 'Color', [0 0 0], 'LineWidth', 1);
    set(p.draw.onlineEyePlotObj(2), 'Color', [1 0.1 0.1], 'LineWidth', 1);
    set(p.draw.onlineEyePlotObj(3), 'Color', [0.1 1 0.1], 'LineWidth', 1);
    
    % make axes for plotting aggregate performance / reaction time 
    % data:
    p.draw.onlinePerfPlotAxes = axes(...
        'Parent', p.draw.onlinePerfPlotWindow, ...
        'Position', [0.1 0.1 0.875 0.375], ...
        'TickDir', 'Out', ...
        'LineWidth', 1, ...
        'XColor', [0 0 0], ...
        'YColor', [0 0 0], ...
        'NextPlot', 'add');
    p.draw.onlineRtPlotAxes = axes(...
        'Parent', p.draw.onlinePerfPlotWindow, ...
        'Position', [0.1 0.6 0.875 0.375], ...
        'TickDir', 'Out', ...
        'LineWidth', 1, ...
        'XColor', [0 0 0], ...
        'YColor', [0 0 0], ...
        'NextPlot', 'add');

    % make plot objects for aggregate performance / reaction time data.
    % Note, here we make one "fill" object (the "bar" part of the error
    % bar) and one "line" object (the mean / median line indicator part of
    % the errorbar) per axis (performance / RT). In "updateOnlinePlots we
    % check how many we need in total and we add new ones as needed.
    p.draw.onlinePerfFillObj(1) = fill(p.draw.onlinePerfPlotAxes, ...
        NaN(1, 5), NaN(1, 5), 0.7*[1 1 1]);
    p.draw.onlineRtFillObj(1) = fill(p.draw.onlineRtPlotAxes, ...
        NaN(1, 5), NaN(1, 5), 0.7*[1 1 1]);
    set([p.draw.onlinePerfFillObj(1), p.draw.onlineRtFillObj(1)], ...
        'EdgeColor', 'None');

    p.draw.onlinePerfPlotObj(1) = plot(p.draw.onlinePerfPlotAxes, ...
        NaN, NaN, 'Color', [0 0 0], 'LineWidth', 2);
    p.draw.onlineRtPlotObj(1)   = plot(p.draw.onlineRtPlotAxes, ...
        NaN, NaN, 'Color', [0 0 0], 'LineWidth', 2);

    set([p.draw.onlinePlotWindow; p.draw.onlineEyePlotWindow; ...
        p.draw.onlinePerfPlotWindow], ...
        'Visible', 'on');

    % add X / Y axis labels:
    set(p.draw.onlinePerfPlotAxes.XAxis.Label, ...
        'String', 'Trial Condition', ...
        'FontSize', 16 ...
        );
    set(p.draw.onlinePerfPlotAxes.YAxis.Label, ...
        'String', 'Proportion Correct', ...
        'FontSize', 16 ...
        );
    set(p.draw.onlineRtPlotAxes.YAxis.Label, ...
        'String', 'Median Reaction Time (seconds)', ...
        'FontSize', 16 ...
        );
end

%% Reposition GUI window
% allobj = findall(0);
% 
% for i = 1:length(allobj)
%     if isfield(get(allobj(i)),'Name')
%         if strfind(get(allobj(i),'Name'),'pldaps')
%             set(allobj(i),'Position',[280 7.58 133.8333   43.4167]);
%             break;
%         end
%     end
% end

%% close old windows
% oldWins = findobj('Type','figure','-not','Name','pldaps_gui2_beta (05nov2012)');
% if ~isempty(oldWins)
%     close(oldWins)
% end

end